workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

default:
  image: rust:latest
  tags:
    - shared-fi
  before_script:
    - apt update && apt install -y libasound2-dev
    - apt install -y libxml2-utils

stages:
  #   - build
  #   - test
  - coverage

# build:
#   stage: build
#   script:
#     - cargo build --verbose

# lint:
#   stage: test
#   script:
#     - rustup component add rustfmt
#     - cargo fmt -- --check
#     - rustup component add clippy
#     - cargo clippy -- -D warnings

# test:
#   stage: test
#   script:
#     - cargo test --verbose --features integration-test

# https://www.collabora.com/news-and-blog/blog/2021/03/24/rust-integrating-llvm-source-base-code-coverage-with-gitlab/
coverage:
  image: "rustdocker/rust:nightly"
  stage: coverage
  variables:
    RUSTFLAGS: "-C instrument-coverage"
    LLVM_PROFILE_FILE: "coverage-%p-%m.profraw"
  script:
    - rustup component add llvm-tools-preview
    - cargo test --features integration-test
    - cargo install grcov
    - grcov . --binary-path ./target/debug/ -s . -t cobertura --branch --ignore-not-existing --ignore "*cargo*" -o cobertura.xml
    - xmllint --xpath 'concat("Coverage: ", 100 * string(//coverage/@line-rate), \"%\")' cobertura.xml
  coverage: '/Coverage: \d+(?:\.\d+)?/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: cobertura.xml
