workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

default:
  image: rust:latest
  tags:
    - shared-fi
  before_script:
    - apt update && apt install -y libasound2-dev

stages:
  #   - build
  #   - test
  - coverage

# build:
#   stage: build
#   script:
#     - cargo build --verbose

# lint:
#   stage: test
#   script:
#     - rustup component add rustfmt
#     - cargo fmt -- --check
#     - rustup component add clippy
#     - cargo clippy -- -D warnings

# test:
#   stage: test
#   script:
#     - cargo test --verbose --features integration-test

# https://www.collabora.com/news-and-blog/blog/2021/03/24/rust-integrating-llvm-source-base-code-coverage-with-gitlab/
coverage:
  image: "rustdocker/rust:nightly"
  stage: coverage
  variables:
    RUSTFLAGS: "-C instrument-coverage"
    LLVM_PROFILE_FILE: "coverage-%p-%m.profraw"
  script:
    - rustup component add llvm-tools-preview
    - cargo test --features integration-test
    # generate html report
    - cargo install grcov
    - grcov . --binary-path ./target/debug/ -s . -t html --branch --ignore-not-existing --ignore "*cargo*" -o ./coverage/
    # generate cobertura report for gitlab integration
    - pip3 install lcov_cobertura
    - grcov . --binary-path ./target/debug/ -s . -t lcov --branch --ignore-not-existing --ignore "*cargo*" -o coverage.lcov
    - python3 /usr/local/lib/python3.5/dist-packages/lcov_cobertura.py coverage.lcov
    - apt-get update && apt-get install -y lcov
    - lcov --summary coverage.lcov
  coverage: '/\s*lines\.*:\s*([\d\.]+%)/'
  artifacts:
    paths:
      - "coverage"
    reports:
      coverage_report:
        coverage_format: cobertura
        path: cobertura.xml
